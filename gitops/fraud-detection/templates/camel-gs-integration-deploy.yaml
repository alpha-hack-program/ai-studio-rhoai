# Enabled if integration.gs is true
{{- if .Values.integrations.gs }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "4"
    argocd.argoproj.io/compare-options: >
      ContainerImage:
        ignoreDifferences: |
          jsonPointers:
            - /spec/template/spec/containers/*/image
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: 'false'
    app.openshift.io/vcs-ref: '{{ .Values.cicdApplication.targetRevision }}'
    app.openshift.io/vcs-uri: '{{ .Values.cicdApplication.repoURL }}'
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"camel-gs-integration:latest","namespace":"{{ .Values.namespace }}"},"fieldPath":"spec.template.spec.containers[?(@.name==\"camel-gs-integration\")].image","pause":"false"}]'
  name: camel-gs-integration
  namespace: {{ .Values.dataScienceProjectNamespace }}
  labels:
    app: camel-gs-integration
    app.kubernetes.io/component: camel-gs-integration
    app.kubernetes.io/instance: camel-gs-integration
    app.kubernetes.io/name: camel-gs-integration
    app.kubernetes.io/part-of: camel-integrations
    app.openshift.io/runtime: quarkus
    app.openshift.io/runtime-version: openjdk-17-ubi8
spec:
  replicas: 1
  selector:
    matchLabels:
      app: camel-gs-integration
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: camel-gs-integration
        deployment: camel-gs-integration
    spec:
      serviceAccountName: camel-gs-integration
      containers:
        - name: camel-gs-integration
          image: >-
            image-registry.openshift-image-registry.svc:5000/{{ .Values.dataScienceProjectNamespace }}/camel-gs-integration:latest
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          envFrom:
            - secretRef:
                name: camel-gs-integration-creds
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          volumeMounts:
            - name: service-account-key-volume
              mountPath: /gs
              readOnly: true
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      volumes:
        - name: service-account-key-volume
          secret:
            secretName: camel-gs-service-account-key
            items:
              - key: GS_SERVICE_ACCOUNT_KEY
                path: service-account-key.json
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: camel-gs-integration
  namespace: {{ .Values.dataScienceProjectNamespace }}
  labels:
    app: camel-gs-integration
    app.kubernetes.io/component: camel-gs-integration
    app.kubernetes.io/instance: camel-gs-integration
    app.kubernetes.io/name: camel-gs-integration
    app.kubernetes.io/part-of: camel-integrations
    app.openshift.io/runtime: java
    app.openshift.io/runtime-version: openjdk-17-ubi8
spec:
  to:
    kind: Service
    name: camel-gs-integration
    weight: 100
  port:
    targetPort: 8080-tcp
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
---
kind: Service
apiVersion: v1
metadata:
  name: camel-gs-integration
  namespace: {{ .Values.dataScienceProjectNamespace }}
  labels:
    app: camel-gs-integration
    app.kubernetes.io/component: camel-gs-integration
    app.kubernetes.io/instance: camel-gs-integration
    app.kubernetes.io/name: camel-gs-integration
    app.kubernetes.io/part-of: camel-integrations
    app.openshift.io/runtime: java
    app.openshift.io/runtime-version: openjdk-17-ubi8
  annotations:
    app.openshift.io/vcs-ref: '{{ .Values.cicdApplication.targetRevision }}'
    app.openshift.io/vcs-uri: '{{ .Values.cicdApplication.repoURL }}'
spec:
  ipFamilies:
    - IPv4
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: 8443-tcp
      protocol: TCP
      port: 8443
      targetPort: 8443
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app: camel-gs-integration
    deployment: camel-gs-integration
{{- end }}